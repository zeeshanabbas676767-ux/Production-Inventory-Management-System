@model DataBaseLibrary.Gen_Components

@{
    ViewBag.Title = "Components";
}

@using (Html.BeginForm("SaveComponent", "Gen_Components", FormMethod.Post))
{
    @Html.AntiForgeryToken()

<div class="form-horizontal">
    @*<h4>@(Model.Id > 0 ? "Edit Service" : "Add New Service")</h4>
        <hr />*@
    @Html.ValidationSummary(true, "", new { @class = "text-danger" })
    @Html.HiddenFor(model => model.Id)

    <div class="row g-3">
        <div class="col-md-2">
            <div class="form-group">
                @Html.LabelFor(model => model.Code, htmlAttributes: new { @class = "control-label col-md-2" })
                @Html.EditorFor(model => model.Code, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.Code, "", new { @class = "text-danger" })
            </div>
        </div>
        <div class="col-md-2">
            <div class="form-group">
                @Html.LabelFor(model => model.D_Code, htmlAttributes: new { @class = "control-label col-md-2" })
                @Html.EditorFor(model => model.D_Code, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.D_Code, "", new { @class = "text-danger" })
            </div>
        </div>
        <div class="col-md-2">
            <div class="form-group">
                @Html.LabelFor(model => model.Name, htmlAttributes: new { @class = "control-label col-md-2" })
                @Html.EditorFor(model => model.Name, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.Name, "", new { @class = "text-danger" })
            </div>
        </div>
        <div class="col-md-2">
            <div class="form-group">
                @Html.LabelFor(model => model.HeadToHead, htmlAttributes: new { @class = "control-label col-md-2" })
                @Html.EditorFor(model => model.HeadToHead, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.HeadToHead, "", new { @class = "text-danger" })
            </div>
        </div>
        <div class="col-md-2">
            <div class="form-group">
                @Html.LabelFor(model => model.Stitch, htmlAttributes: new { @class = "control-label col-md-2" })
                @Html.EditorFor(model => model.Stitch, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.Stitch, "", new { @class = "text-danger" })
            </div>
        </div>
        <div class="col-md-2">
            <div class="form-group">
                @Html.LabelFor(model => model.Tilla, htmlAttributes: new { @class = "control-label col-md-2" })
                @Html.EditorFor(model => model.Tilla, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.Tilla, "", new { @class = "text-danger" })
            </div>
        </div>
        <div class="col-md-2">
            <div class="form-group">
                @Html.LabelFor(model => model.Seq_A, htmlAttributes: new { @class = "control-label col-md-2" })
                @Html.EditorFor(model => model.Seq_A, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.Seq_A, "", new { @class = "text-danger" })
            </div>
        </div>
        <div class="col-md-2">
            <div class="form-group">
                @Html.LabelFor(model => model.Seq_B, htmlAttributes: new { @class = "control-label col-md-2" })
                @Html.EditorFor(model => model.Seq_B, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.Seq_B, "", new { @class = "text-danger" })
            </div>
        </div>
        <div class="col-md-2">
            <div class="form-group">
                @Html.LabelFor(model => model.BranchId, htmlAttributes: new { @class = "control-label col-md-2" })
                @Html.EditorFor(model => model.BranchId, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.BranchId, "", new { @class = "text-danger" })
            </div>
        </div>
        <div class="col-md-2">
            <div class="form-group">
                <div class="checkbox mt-0" style="transform: scale(1.2); margin-left: 20px; font-size: 10px">
                    @Html.LabelFor(model => model.Active, htmlAttributes: new { @class = "control-label", style = "font-size:14px" })
                    @Html.EditorFor(model => model.Active, new { htmlAttributes = new { style = "width:100px; height: 25px;font-size:13px" } })
                    @Html.ValidationMessageFor(model => model.Active, "", new { @class = "text-danger" })

                </div>
            </div>
        </div>
        <div class="col-md-2">
            <div class="form-group">
                <div class="checkbox mt-0" style="transform: scale(1.2); margin-left: 20px; font-size: 10px">
                    @Html.LabelFor(model => model.Deleted, htmlAttributes: new { @class = "control-label", style = "font-size:14px" })
                    @Html.EditorFor(model => model.Deleted, new { htmlAttributes = new { style = "width:100px; height: 25px;font-size:13px" } })
                    @Html.ValidationMessageFor(model => model.Deleted, "", new { @class = "text-danger" })

                </div>
            </div>
        </div>
    </div>
    <div class="form-group mt-3">
        <div class="col-md-offset-2 col-md-10">
            <input type="submit" value="@(Model.Id > 0 ? "Update" : "Create")" class="btn btn-primary" style="font-weight:600;"/>
            @if (Model.Id > 0)
            {
                @Html.ActionLink("Cancel", "Component", null, new { @class = "btn btn-secondary" })
            }
            else
            {
                <input type="reset" value="Clear" class="btn btn-dark" style="font-weight:600;"/>
            }
        </div>
    </div>
</div>
}
<div class="table-responsive mt-3">
    <table class="table table-bordered text-center">
        <thead class="table-light">
            <tr>
                <th>Code</th>
                <th> D_Code </th>
                <th> Name </th>
                <th>HeadToHead</th>
                <th> Stitch</th>
                <th> Tilla</th>
                <th>Seq_A</th>
                <th> Seq_B</th>
                <th> Active</th>
                <th> Deleted </th>
                <th> BranchId</th>
                <th>Action</th>
            </tr>
        </thead>
        <tbody>
            @if (ViewBag.ComponentList != null && ((IEnumerable<DataBaseLibrary.Gen_Components>)ViewBag.ComponentList).Any())
            {
                foreach (var item in (IEnumerable<DataBaseLibrary.Gen_Components>)ViewBag.ComponentList)
                {
                    <tr>
                        <td>@item.Code</td>
                        <td>@item.D_Code</td>
                        <td>@item.Name</td>
                        <td>@item.HeadToHead</td>
                        <td>@item.Stitch</td>
                        <td>@item.Tilla</td>
                        <td>@item.Seq_A</td>
                        <td>@item.Seq_B</td>
                        <td>@item.Deleted</td>
                        <td>@item.Active</td>
                        <td>@item.BranchId</td>
                        <td>
                            @Html.ActionLink(" ", "Edit", new { id = item.Id }, new { @class = "btn btn-sm btn-outline-success me-2 shadow-sm fa fa-edit", title = "Edit" })
                            @using (Html.BeginForm("DeleteComponents", "Gen_Components", FormMethod.Post, new { onsubmit = "return confirm('Are you sure you want to delete ?');", style = "display:inline" }))
                            {
                                @Html.AntiForgeryToken()
                                @Html.Hidden("id", item.Id)
                                <button type="submit" class="btn btn-sm btn-outline-danger shadow-sm" title="Delete">
                                    <i class="fa fa-trash"></i>
                                </button>
                            }
                        </td>
                    </tr>
                }
            }
            else
            {
                <tr>
                    <td colspan="12" class="text-muted">No Components found.</td>
                </tr>
            }
        </tbody>
    </table>
</div>
<script src="https://cdn.jsdelivr.net/npm/bootstrap@5.1.3/dist/js/bootstrap.bundle.min.js"></script>