@model DataBaseLibrary.Hr_Customers

@{
    ViewBag.Title = "Customers";
}
<div class="container my-0" style="width:900px">
    @using (Html.BeginForm("SaveHr_Customers", "Hr_Customers", FormMethod.Post))
    {
        @Html.AntiForgeryToken()

        <div class="form-horizontal">
            @*<h4>@(Model.Id > 0 ? "Edit Service" : "Add New Service")</h4>
                <hr />*@
            @Html.ValidationSummary(true, "", new { @class = "text-danger" })
            @Html.HiddenFor(model => model.Id)
            <div class="row g-3">
                <div class="col-md-2">
                    <div class="form-group">
                        @Html.LabelFor(model => model.Customer_Id, htmlAttributes: new { @class = "control-label col-md-2" })
                        @Html.EditorFor(model => model.Customer_Id, new { htmlAttributes = new { @class = "form-control" } })
                        @Html.ValidationMessageFor(model => model.Customer_Id, "", new { @class = "text-danger" })
                    </div>
                </div>
                <div class="col-md-2">
                    <div class="form-group">
                        @Html.LabelFor(model => model.Customer_Name, htmlAttributes: new { @class = "control-label col-md-2" })
                        @Html.EditorFor(model => model.Customer_Name, new { htmlAttributes = new { @class = "form-control" } })
                        @Html.ValidationMessageFor(model => model.Customer_Name, "", new { @class = "text-danger" })
                    </div>
                </div>
                <div class="col-md-2">
                    <div class="form-group">
                        @Html.LabelFor(model => model.NTN_Number, htmlAttributes: new { @class = "control-label col-md-2" })
                        @Html.EditorFor(model => model.NTN_Number, new { htmlAttributes = new { @class = "form-control" } })
                        @Html.ValidationMessageFor(model => model.NTN_Number, "", new { @class = "text-danger" })
                    </div>
                </div>
                <div class="col-md-2">
                    <div class="form-group">
                        @Html.LabelFor(model => model.STRN_Number, htmlAttributes: new { @class = "control-label col-md-2" })
                        @Html.EditorFor(model => model.STRN_Number, new { htmlAttributes = new { @class = "form-control" } })
                        @Html.ValidationMessageFor(model => model.STRN_Number, "", new { @class = "text-danger" })
                    </div>
                </div>
                <div class="col-md-2">
                    <div class="form-group">
                        @Html.LabelFor(model => model.Customer_Address, htmlAttributes: new { @class = "control-label col-md-2" })
                        @Html.EditorFor(model => model.Customer_Address, new { htmlAttributes = new { @class = "form-control" } })
                        @Html.ValidationMessageFor(model => model.Customer_Address, "", new { @class = "text-danger" })
                    </div>
                </div>
                <div class="col-md-2">
                    <div class="form-group">
                        @Html.LabelFor(model => model.Customer_City, htmlAttributes: new { @class = "control-label col-md-2" })
                        @Html.EditorFor(model => model.Customer_City, new { htmlAttributes = new { @class = "form-control" } })
                        @Html.ValidationMessageFor(model => model.Customer_City, "", new { @class = "text-danger" })
                    </div>
                </div>
                <div class="col-md-2">
                    <div class="form-group">
                        @Html.LabelFor(model => model.Customer_Country, htmlAttributes: new { @class = "control-label col-md-2" })
                        @Html.EditorFor(model => model.Customer_Country, new { htmlAttributes = new { @class = "form-control" } })
                        @Html.ValidationMessageFor(model => model.Customer_Country, "", new { @class = "text-danger" })
                    </div>
                </div>
                <div class="col-md-2">
                    <div class="form-group">
                        @Html.LabelFor(model => model.Customer_Email, htmlAttributes: new { @class = "control-label col-md-2" })
                        @Html.EditorFor(model => model.Customer_Email, new { htmlAttributes = new { @class = "form-control" } })
                        @Html.ValidationMessageFor(model => model.Customer_Email, "", new { @class = "text-danger" })
                    </div>
                </div>
                <div class="col-md-2">
                    <div class="form-group">
                        @Html.LabelFor(model => model.Customer_Email2, htmlAttributes: new { @class = "control-label col-md-2" })
                        @Html.EditorFor(model => model.Customer_Email2, new { htmlAttributes = new { @class = "form-control" } })
                        @Html.ValidationMessageFor(model => model.Customer_Email2, "", new { @class = "text-danger" })
                    </div>
                </div>
                <div class="col-md-2">
                    <div class="form-group">
                        @Html.LabelFor(model => model.Customer_Phone, htmlAttributes: new { @class = "control-label col-md-2" })
                        @Html.EditorFor(model => model.Customer_Phone, new { htmlAttributes = new { @class = "form-control" } })
                        @Html.ValidationMessageFor(model => model.Customer_Phone, "", new { @class = "text-danger" })
                    </div>
                </div>
                <div class="col-md-2">
                    <div class="form-group">
                        @Html.LabelFor(model => model.Customer_Phone2, htmlAttributes: new { @class = "control-label col-md-2" })
                        @Html.EditorFor(model => model.Customer_Phone2, new { htmlAttributes = new { @class = "form-control" } })
                        @Html.ValidationMessageFor(model => model.Customer_Phone2, "", new { @class = "text-danger" })
                    </div>
                </div>
                <div class="col-md-2">
                    <div class="form-group">
                        @Html.LabelFor(model => model.Customer_Mobile, htmlAttributes: new { @class = "control-label col-md-2" })
                        @Html.EditorFor(model => model.Customer_Mobile, new { htmlAttributes = new { @class = "form-control" } })
                        @Html.ValidationMessageFor(model => model.Customer_Mobile, "", new { @class = "text-danger" })
                    </div>
                </div>
                @*<div class="col-md-2">
                    <div class="form-group">
                        @Html.LabelFor(model => model.Customer_Fax, htmlAttributes: new { @class = "control-label col-md-2" })
                        @Html.EditorFor(model => model.Customer_Fax, new { htmlAttributes = new { @class = "form-control" } })
                        @Html.ValidationMessageFor(model => model.Customer_Fax, "", new { @class = "text-danger" })
                    </div>
                </div>
                <div class="col-md-2">
                    <div class="form-group">
                        @Html.LabelFor(model => model.Customer_Credit_Limit_CAP, "Customer_Credit", htmlAttributes: new { @class = "control-label col-md-2" })
                        @Html.EditorFor(model => model.Customer_Credit_Limit_CAP, new { htmlAttributes = new { @class = "form-control" } })
                        @Html.ValidationMessageFor(model => model.Customer_Credit_Limit_CAP, "", new { @class = "text-danger" })
                    </div>
                </div>
                <div class="col-md-2">
                    <div class="form-group">
                        @Html.LabelFor(model => model.Customer_Invoice_Period, "Customer_Invoice", htmlAttributes: new { @class = "control-label col-md-2" })
                        @Html.EditorFor(model => model.Customer_Invoice_Period, new { htmlAttributes = new { @class = "form-control" } })
                        @Html.ValidationMessageFor(model => model.Customer_Invoice_Period, "", new { @class = "text-danger" })
                    </div>
                </div>
                <div class="col-md-2">
                    <div class="form-group">
                        @Html.LabelFor(model => model.BranchId, htmlAttributes: new { @class = "control-label col-md-2" })
                        @Html.EditorFor(model => model.BranchId, new { htmlAttributes = new { @class = "form-control" } })
                        @Html.ValidationMessageFor(model => model.BranchId, "", new { @class = "text-danger" })
                    </div>
                </div>
                <div class="col-md-2">
                    <div class="form-group">
                        @Html.LabelFor(model => model.RecordTimeStamp, htmlAttributes: new { @class = "control-label col-md-2" })
                        @Html.EditorFor(model => model.RecordTimeStamp, new { htmlAttributes = new { @class = "form-control" } })
                        @Html.ValidationMessageFor(model => model.RecordTimeStamp, "", new { @class = "text-danger" })
                    </div>
                </div>*@
                @*<div class="col-md-2">
                    <div class="form-group">
                        @Html.LabelFor(model => model.Active, htmlAttributes: new { @class = "control-label col-md-2" })
                        <div class="checkbox">
                            @Html.EditorFor(model => model.Active)
                            @Html.ValidationMessageFor(model => model.Active, "", new { @class = "text-danger" })
                        </div>
                    </div>
                </div>
                <div class="col-md-2">
                    <div class="form-group">
                        @Html.LabelFor(model => model.Deleted, htmlAttributes: new { @class = "control-label col-md-2" })
                        <div class="checkbox">
                            @Html.EditorFor(model => model.Deleted)
                            @Html.ValidationMessageFor(model => model.Deleted, "", new { @class = "text-danger" })
                        </div>
                    </div>
                </div>*@
            </div>
        </div>
        <div class="form-group mt-3">
            <div class="col-md-offset-2 col-md-10">
                <input type="submit" value="@(Model.Id > 0 ? "Update" : "Create")" class="btn btn-primary"style="font-weight:600;" />
                @if (Model.Id > 0)
                {
                    @Html.ActionLink("Cancel", "Hr_Customers", null, new { @class = "btn btn-secondary" })
                }
                else
                {
                    <input type="reset" value="Clear" class="btn btn-dark"style="font-weight:600;" />
                }
            </div>
        </div>
    }
    <div class="table-responsive mt-3">
        <table class="table table-bordered text-center">
            <thead class="table-light">
                <tr>
                    <th>Customer_Id</th>
                    <th>Customer_Name</th>
                    <th>NTN_Number</th>
                    <th>STRN_Number</th>
                    <th>Customer_Address</th>
                    <th>Customer_City</th>
                    <th>Customer_Country</th>
                    <th>Customer_Email</th>
                    <th>Customer_Email2</th>
                    <th>Customer_Phone</th>
                    <th>Customer_Phone2</th>
                    <th>Customer_Mobile</th>
                    <th>Action</th>
                </tr>
            </thead>
            <tbody>
                @if (ViewBag.Hr_CustomersList != null && ((IEnumerable<DataBaseLibrary.Hr_Customers>)ViewBag.Hr_CustomersList).Any())
                {
                    foreach (var item in (IEnumerable<DataBaseLibrary.Hr_Customers>)ViewBag.Hr_CustomersList)
                    {
                        <tr>
                            <td>@item.Customer_Id</td>
                            <td>@item.Customer_Name</td>
                            <td>@item.NTN_Number</td>
                            <td>@item.STRN_Number</td>
                            <td>@item.Customer_Address</td>
                            <td>@item.Customer_City</td>
                            <td>@item.Customer_Country</td>
                            <td>@item.Customer_Email</td>
                            <td>@item.Customer_Email2</td>
                            <td>@item.Customer_Phone</td>
                            <td>@item.Customer_Phone2</td>
                            <td>@item.Customer_Mobile</td>
                            <td class="d-flex align-items-center" style="grid-gap:4px">
                                @Html.ActionLink(" ", "Edit", new { id = item.Id }, new { @class = "btn btn-sm btn-outline-success me-2 shadow-sm fa fa-edit", title = "Edit" })
                                @using (Html.BeginForm("DeleteHr_Customers", "Hr_Customers", FormMethod.Post, new { onsubmit = "return confirm('Are you sure you want to delete ?');", style = "display:inline" }))
                                {
                                    @Html.AntiForgeryToken()
                                    @Html.Hidden("id", item.Id)
                                    <button type="submit" class="btn btn-sm btn-outline-danger shadow-sm" title="Delete">
                                        <i class="fa fa-trash"></i>
                                    </button>
                                }
                            </td>
                        </tr>
                    }
                }
                else
                {
                    <tr>
                        <td colspan="13" class="text-muted">No Customers found.</td>
                    </tr>
                }
            </tbody>
        </table>
    </div>
</div>
    <script src="https://cdn.jsdelivr.net/npm/bootstrap@5.1.3/dist/js/bootstrap.bundle.min.js"></script>
