@model DataBaseLibrary.Gen_MachineParameters

@{
    ViewBag.Title = "Machine Parameters";
}
@using (Html.BeginForm("SaveMachineParameters", "Gen_MachineParameters", FormMethod.Post))
{
    @Html.AntiForgeryToken()

    <div class="form-horizontal">
        @*<h4>@(Model.Id > 0 ? "Edit Service" : "Add New Service")</h4>
            <hr />*@
        @Html.ValidationSummary(true, "", new { @class = "text-danger" })
        @Html.HiddenFor(model => model.Id)
        <div class="row g-3">
            <div class="col-md-2">
                <div class="form-group">
                    @Html.LabelFor(model => model.HeadToHead, htmlAttributes: new { @class = "control-label col-md-2" })
                    @Html.EditorFor(model => model.HeadToHead, new { htmlAttributes = new { @class = "form-control" } })
                    @Html.ValidationMessageFor(model => model.HeadToHead, "", new { @class = "text-danger" })
                </div>
            </div>
            <div class="col-md-2">
                <div class="form-group">
                    @Html.LabelFor(model => model.FrameHeight, htmlAttributes: new { @class = "control-label col-md-2" })
                    @Html.EditorFor(model => model.FrameHeight, new { htmlAttributes = new { @class = "form-control" } })
                    @Html.ValidationMessageFor(model => model.FrameHeight, "", new { @class = "text-danger" })
                </div>
            </div>
            <div class="col-md-2">
                <div class="form-group">
                    @Html.LabelFor(model => model.CreatedBy, htmlAttributes: new { @class = "control-label col-md-2" })
                    @Html.EditorFor(model => model.CreatedBy, new { htmlAttributes = new { @class = "form-control" } })
                    @Html.ValidationMessageFor(model => model.CreatedBy, "", new { @class = "text-danger" })
                </div>
            </div>
            <div class="col-md-2">
                <div class="form-group">
                    @Html.LabelFor(model => model.CreatedDate, htmlAttributes: new { @class = "control-label col-md-2" })
                    @Html.EditorFor(model => model.CreatedDate, new { htmlAttributes = new { @class = "form-control" } })
                    @Html.ValidationMessageFor(model => model.CreatedDate, "31/01/2025 12:00 am", new { @class = "text-danger", style = "font-size:12px" })
                </div>
            </div>
            <div class="col-md-2">
                <div class="form-group">
                    @Html.LabelFor(model => model.UpdatedBy, htmlAttributes: new { @class = "control-label col-md-2" })
                    @Html.EditorFor(model => model.UpdatedBy, new { htmlAttributes = new { @class = "form-control" } })
                    @Html.ValidationMessageFor(model => model.UpdatedBy, "", new { @class = "text-danger" })
                </div>
            </div>
            <div class="col-md-2">
                <div class="form-group">
                    @Html.LabelFor(model => model.UpdatedDate, htmlAttributes: new { @class = "control-label col-md-2" })
                    @Html.EditorFor(model => model.UpdatedDate, new { htmlAttributes = new { @class = "form-control" } })
                    @Html.ValidationMessageFor(model => model.UpdatedDate, "31/01/2025 12:00 am", new { @class = "text-danger", style = "font-size:12px" })
                </div>
            </div>
        </div>
    </div>
    <div class="form-group mt-3">
        <div class="col-md-offset-2 col-md-10">
            <input type="submit" value="@(Model.Id > 0 ? "Update" : "Create")" class="btn btn-primary"style="font-weight:600;" />
            @if (Model.Id > 0)
            {
                @Html.ActionLink("Cancel", "MachineParameters", null, new { @class = "btn btn-secondary" })
            }
            else
            {
                <input type="reset" value="Clear" class="btn btn-dark"style="font-weight:600;" />
            }
        </div>
    </div>
}
<div class="table-responsive mt-3">
    <table class="table table-bordered text-center">
        <thead class="table-light">
            <tr>
                <th>HeadToHead</th>
                <th>FrameHeight</th>
                <th>CreatedBy</th>
                <th>CreatedDate</th>
                <th>UpdatedBy</th>
                <th>UpdatedDate</th>
                <th>Action</th>
            </tr>
        </thead>
        <tbody>
            @if (ViewBag.MachineParametersList != null && ((IEnumerable<DataBaseLibrary.Gen_MachineParameters>)ViewBag.MachineParametersList).Any())
            {
                foreach (var item in (IEnumerable<DataBaseLibrary.Gen_MachineParameters>)ViewBag.MachineParametersList)
                {
                    <tr>
                        <td>@item.HeadToHead</td>
                        <td>@item.FrameHeight</td>
                        <td>@item.CreatedBy</td>
                        <td>@item.CreatedDate</td>
                        <td>@item.UpdatedBy</td>
                        <td>@item.UpdatedDate</td>
                        <td>
                            @Html.ActionLink(" ", "Edit", new { id = item.Id }, new { @class = "btn btn-sm btn-outline-success me-2 shadow-sm fa fa-edit", title = "Edit" })
                            @using (Html.BeginForm("DeleteMachineParameters", "Gen_MachineParameters", FormMethod.Post, new { onsubmit = "return confirm('Are you sure you want to delete ?');", style = "display:inline" }))
                            {
                                @Html.AntiForgeryToken()
                                @Html.Hidden("id", item.Id)
                                <button type="submit" class="btn btn-sm btn-outline-danger shadow-sm" title="Delete">
                                    <i class="fa fa-trash"></i>
                                </button>
                            }
                        </td>
                    </tr>
                }
            }
            else
            {
                <tr>
                    <td colspan="7" class="text-muted">No Machines Parameters found.</td>
                </tr>
            }
        </tbody>
    </table>
</div>
<script src="https://cdn.jsdelivr.net/npm/bootstrap@5.1.3/dist/js/bootstrap.bundle.min.js"></script>
