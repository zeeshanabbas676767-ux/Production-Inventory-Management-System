@model DataBaseLibrary.Gen_Brands

@{
    ViewBag.Title = "Brand";
}
<div class="container my-0" style="width:900px">
    @using (Html.BeginForm("SaveBrand", "Gen_Brands", FormMethod.Post))
    {
        @Html.AntiForgeryToken()

        <div class="form-horizontal">
            @*<h4>@(Model.Id > 0 ? "Edit Service" : "Add New Service")</h4>
                <hr />*@
            @Html.ValidationSummary(true, "", new { @class = "text-danger" })
            @Html.HiddenFor(model => model.Id)
            <div class="row g-3">
                <div class="col-md-2">
                    <div class="form-group">
                        @Html.LabelFor(model => model.Code, htmlAttributes: new { @class = "control-label col-md-2" })
                        @Html.EditorFor(model => model.Code, new { htmlAttributes = new { @class = "form-control" } })
                        @Html.ValidationMessageFor(model => model.Code, "", new { @class = "text-danger" })
                    </div>
                </div>
                <div class="col-md-2">
                    <div class="form-group">
                        @Html.LabelFor(model => model.BrandName, htmlAttributes: new { @class = "control-label col-md-2" })
                        @Html.EditorFor(model => model.BrandName, new { htmlAttributes = new { @class = "form-control" } })
                        @Html.ValidationMessageFor(model => model.BrandName, "", new { @class = "text-danger" })
                    </div>
                </div>
                <div class="col-md-2">
                    <div class="form-group">
                        @Html.LabelFor(model => model.Description, htmlAttributes: new { @class = "control-label col-md-2" })
                        @Html.EditorFor(model => model.Description, new { htmlAttributes = new { @class = "form-control" } })
                        @Html.ValidationMessageFor(model => model.Description, "", new { @class = "text-danger" })
                    </div>
                </div>
                <div class="col-md-2">
                    <div class="form-group">
                        @Html.LabelFor(model => model.Address, htmlAttributes: new { @class = "control-label col-md-2" })
                        @Html.EditorFor(model => model.Address, new { htmlAttributes = new { @class = "form-control" } })
                        @Html.ValidationMessageFor(model => model.Address, "", new { @class = "text-danger" })
                    </div>
                </div>
                <div class="col-md-2">
                    <div class="form-group">
                        @Html.LabelFor(model => model.BranchId, htmlAttributes: new { @class = "control-label col-md-2" })
                        @Html.EditorFor(model => model.BranchId, new { htmlAttributes = new { @class = "form-control" } })
                        @Html.ValidationMessageFor(model => model.BranchId, "", new { @class = "text-danger" })
                    </div>
                </div>
                <div class="col-md-2">
                    <div class="form-group">
                        @Html.LabelFor(model => model.RecordTimeStamp, htmlAttributes: new { @class = "control-label col-md-2" })
                        @Html.EditorFor(model => model.RecordTimeStamp, new { htmlAttributes = new { @class = "form-control" } })
                        @Html.ValidationMessageFor(model => model.RecordTimeStamp, "", new { @class = "text-danger"})
                    </div>
                </div>
                @*<div class="col-md-2">
                    <div class="form-group">
                        <div class="checkbox mt-0" style="transform: scale(1.2); margin-left: 20px;">
                            @Html.LabelFor(model => model.Active, htmlAttributes: new { @class = "control-label" })
                            @Html.EditorFor(model => model.Active, new { htmlAttributes = new { style = "width:100px; height: 15px;" } })
                            @Html.ValidationMessageFor(model => model.Active, "", new { @class = "text-danger" })
                        </div>
                    </div>
                </div>
                <div class="col-md-2">
                    <div class="form-group">
                        <div class="checkbox mt-0" style="transform: scale(1.2); margin-left: 20px;">
                            @Html.LabelFor(model => model.Deleted, htmlAttributes: new { @class = "control-label" })
                            @Html.EditorFor(model => model.Deleted, new { htmlAttributes = new { style = "width:100px;height: 15px;" } })
                            @Html.ValidationMessageFor(model => model.Deleted, "", new { @class = "text-danger" })
                        </div>
                    </div>
                </div>*@
            </div>
        </div>
        <div class="form-group mt-3">
            <div class="col-md-offset-2 col-md-10">
                <input type="submit" value="@(Model.Id > 0 ? "Update" : "Create")" class="btn btn-primary" style="font-weight:600;"/>
                @if (Model.Id > 0)
                {
                    @Html.ActionLink("Cancel", "Brand", null, new { @class = "btn btn-secondary" })
                }
                else
                {
                    <input type="reset" value="Clear" class="btn btn-dark" style="font-weight:600;" />
                }
            </div>
        </div>
    }
    <div class="table-responsive mt-3">
        <table class="table table-bordered text-center">
            <thead class="table-light">
                <tr>
                    <th>Code</th>
                    <th>BrandName</th>
                    <th>Description</th>
                    <th>Address</th>
                    <th>RecordTimeStamp</th>
                    <th>BranchId</th>
                    <th>Action</th>
                </tr>
            </thead>
            <tbody>
                @if (ViewBag.BrandList != null && ((IEnumerable<DataBaseLibrary.Gen_Brands>)ViewBag.BrandList).Any())
                {
                    foreach (var item in (IEnumerable<DataBaseLibrary.Gen_Brands>)ViewBag.BrandList)
                    {
                        <tr>
                            <td>@item.Code</td>
                            <td>@item.BrandName</td>
                            <td>@item.Description</td>
                            <td>@item.Address</td>
                            <td>@item.RecordTimeStamp</td>
                            <td>@item.BranchId</td>
                            <td>
                                @Html.ActionLink(" ", "Edit", new { id = item.Id }, new { @class = "btn btn-sm btn-outline-success me-2 shadow-sm fa fa-edit", title = "Edit" })
                                @using (Html.BeginForm("DeleteBrand", "Gen_Brands", FormMethod.Post, new { onsubmit = "return confirm('Are you sure you want to delete ?');", style = "display:inline" }))
                                {
                                    @Html.AntiForgeryToken()
                                    @Html.Hidden("id", item.Id)
                                    <button type="submit" class="btn btn-sm btn-outline-danger shadow-sm" title="Delete">
                                        <i class="fa fa-trash"></i>
                                    </button>
                                }
                            </td>
                        </tr>
                    }
                }
                else
                {
                    <tr>
                        <td colspan="7" class="text-muted">No Brands found.</td>
                    </tr>
                }
            </tbody>
        </table>
    </div>
</div>
    <script src="https://code.jquery.com/jquery-3.6.0.min.js"></script>
    <script src="https://cdnjs.cloudflare.com/ajax/libs/jspdf/2.5.1/jspdf.umd.min.js"></script>
    <script src="https://html2canvas.hertzen.com/dist/html2canvas.min.js"></script>
    <script src="https://cdnjs.cloudflare.com/ajax/libs/html2pdf.js/0.9.2/html2pdf.bundle.min.js"></script>
    <script src="https://cdnjs.cloudflare.com/ajax/libs/jquery-table2excel/1.1.1/jquery.table2excel.min.js"></script>
    <script src="https://cdn.jsdelivr.net/npm/bootstrap@5.1.3/dist/js/bootstrap.bundle.min.js"></script>
