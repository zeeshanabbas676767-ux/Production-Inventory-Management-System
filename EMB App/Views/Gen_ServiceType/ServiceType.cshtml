@model DataBaseLibrary.Gen_ServiceType

@{
    ViewBag.Title = "Service Type";
}

@using (Html.BeginForm("SaveServiceType", "Gen_ServiceType", FormMethod.Post))
{
    @Html.AntiForgeryToken()

    <div class="form-horizontal">
        @*<h4>@(Model.Id > 0 ? "Edit Service" : "Add New Service")</h4>
            <hr />*@
        @Html.ValidationSummary(true, "", new { @class = "text-danger" })
        @Html.HiddenFor(model => model.Id)
        <div class="row g-3">
            <div class="col-md-2">
                <div class="form-group">
                    @Html.LabelFor(model => model.Service_Type, htmlAttributes: new { @class = "control-label col-md-2" })
                    @Html.EditorFor(model => model.Service_Type, new { htmlAttributes = new { @class = "form-control" } })
                    @Html.ValidationMessageFor(model => model.Service_Type, "", new { @class = "text-danger" })
                </div>
            </div>
            <div class="col-md-2">
                <div class="form-group">
                    @Html.LabelFor(model => model.RecordTimeStamp, htmlAttributes: new { @class = "control-label col-md-2" })
                    @Html.EditorFor(model => model.RecordTimeStamp, new { htmlAttributes = new { @class = "form-control" } })
                    @Html.ValidationMessageFor(model => model.RecordTimeStamp, "31/01/2025 12:00 am", new { @class = "text-danger", style = "font-size:12px" })
                </div>
            </div>
            <div class="col-md-2">
                <div class="form-group">
                    @Html.LabelFor(model => model.Service_TypeDescription, htmlAttributes: new { @class = "control-label col-md-2" })
                    @Html.EditorFor(model => model.Service_TypeDescription, new { htmlAttributes = new { @class = "form-control" } })
                    @Html.ValidationMessageFor(model => model.Service_TypeDescription, "", new { @class = "text-danger" })
                </div>
            </div>
            <div class="col-md-2">
                <div class="form-group">
                    @Html.LabelFor(model => model.BranchId, htmlAttributes: new { @class = "control-label col-md-2" })
                    @Html.EditorFor(model => model.BranchId, new { htmlAttributes = new { @class = "form-control" } })
                    @Html.ValidationMessageFor(model => model.BranchId, "", new { @class = "text-danger" })
                </div>
            </div>
            <div class="col-md-2">
                <div class="form-group">
                    @Html.LabelFor(model => model.Active, htmlAttributes: new { @class = "control-label col-md-2" })
                    <div class="checkbox" style="transform: scale(1.2); margin-left: 20px; font-size: 10px">
                        @Html.EditorFor(model => model.Active, new { htmlAttributes = new { style = "width:100px; height: 25px;font-size:13px" } })
                        @Html.ValidationMessageFor(model => model.Active, "", new { @class = "text-danger" })
                    </div>
                </div>
            </div>
            <div class="col-md-2">
                <div class="form-group">
                    @Html.LabelFor(model => model.Deleted, htmlAttributes: new { @class = "control-label col-md-2" })
                    <div class="checkbox" style="transform: scale(1.2); margin-left: 20px; font-size: 10px">
                        @Html.EditorFor(model => model.Deleted, new { htmlAttributes = new { style = "width:100px; height: 25px;font-size:13px" } })
                        @Html.ValidationMessageFor(model => model.Deleted, "", new { @class = "text-danger" })
                    </div>
                </div>
            </div>
        </div>
        <div class="form-group mt-3">
            <div class="col-md-offset-2 col-md-10">
                <input type="submit" value="@(Model.Id > 0 ? "Update" : "Create")" class="btn btn-primary" />
                @if (Model.Id > 0)
                {
                    @Html.ActionLink("Cancel", "ServiceType", null, new { @class = "btn btn-secondary" })
                }
                else
                {
                    <input type="reset" value="Clear" class="btn btn-secondary" />
                }
            </div>
        </div>
    </div>
}
<div class="table-responsive mt-3">
    <table class="table table-bordered text-center">
        <thead class="table-light">
            <tr>
                <th>Service_Type</th>
                <th>Service_TypeDescription</th>
                <th>RecordTimeStamp</th>
                <th>BranchId</th>
                <th>Active</th>
                <th>Deleted</th>
                <th>Action</th>
            </tr>
        </thead>
        <tbody>
            @if (ViewBag.ServiceTypeList != null && ((IEnumerable<DataBaseLibrary.Gen_ServiceType>)ViewBag.ServiceTypeList).Any())
            {
                foreach (var item in (IEnumerable<DataBaseLibrary.Gen_ServiceType>)ViewBag.ServiceTypeList)
                {
                    <tr>
                        <td>@item.Service_Type</td>
                        <td>@item.Service_TypeDescription</td>
                        <td>@item.RecordTimeStamp</td>
                        <td>@item.BranchId</td>
                        <td>@item.Active</td>
                        <td>@item.Deleted</td>
                        <td>
                            @Html.ActionLink(" ", "Edit", new { id = item.Id }, new { @class = "btn btn-sm btn-outline-success me-2 shadow-sm fa fa-edit", title = "Edit" })
                            @using (Html.BeginForm("DeleteServiceType", "Gen_ServiceType", FormMethod.Post, new { onsubmit = "return confirm('Are you sure you want to delete ?');", style = "display:inline" }))
                            {
                                @Html.AntiForgeryToken()
                                @Html.Hidden("id", item.Id)
                                <button type="submit" class="btn btn-sm btn-outline-danger shadow-sm" title="Delete">
                                    <i class="fa fa-trash"></i>
                                </button>
                            }
                        </td>
                    </tr>
                }
            }
            else
            {
                <tr>
                    <td colspan="10" class="text-muted">No Service Types found.</td>
                </tr>
            }
        </tbody>
    </table>
</div>
<script src="https://cdn.jsdelivr.net/npm/bootstrap@5.1.3/dist/js/bootstrap.bundle.min.js"></script>







